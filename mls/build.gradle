apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.mycujoo'
version = '1.0.1-alpha26'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/ASL2.0'
            exclude("META-INF/*.kotlin_module")
        }

        versionCode 1
        versionName version
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            testCoverageEnabled true
        }

    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.mockito:mockito-core:3.0.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
//    androidTestImplementation "org.mockito:mockito-core:3.0.0"
    androidTestImplementation 'org.mockito:mockito-android:2.7.15'
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'androidx.test:core-ktx:1.2.0'

    implementation "androidx.constraintlayout:constraintlayout:2.0.0-rc1"

    implementation "androidx.recyclerview:recyclerview:1.1.0"

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    api 'com.google.android.exoplayer:exoplayer:2.11.2'

    implementation 'com.google.code.gson:gson:2.8.6'

    api 'com.npaw.youbora.adapters:exoplayer2-adapter:6.6.4'

    implementation 'com.google.dagger:dagger-android:2.20'
    implementation 'com.google.dagger:dagger-android-support:2.20'
    // if you use the support libraries
    kapt 'com.google.dagger:dagger-compiler:2.24'

    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6"
    testImplementation 'android.arch.core:core-testing:1.1.1'

    implementation 'com.jakewharton.rxrelay3:rxrelay:3.0.0'

    testImplementation("com.squareup.okhttp3:mockwebserver:4.7.1")
    //version 1.3.6 has merging problem [More than one file was found with OS independent path 'META-INF/LICENSE']
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.6'

    api 'com.caverock:androidsvg-aar:1.4'
    androidTestImplementation 'com.caverock:androidsvg-aar:1.4'

    implementation 'joda-time:joda-time:2.10.6'
    testImplementation 'joda-time:joda-time:2.10.6'

    //TV
    implementation "androidx.leanback:leanback-preference:1.0.0"
    implementation 'com.google.android.exoplayer:extension-leanback:2.11.1'

}


//def githubProperties = new Properties()
//githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

def getVersionName = { ->
    return version  // version Name
}

def getArtificatId = { ->
    return "mls" // library name ID
}

//publishing {
//    publications {
//        bar(MavenPublication) {
//            groupId 'tv.mycujoo.libraries' // group ID
//            artifactId getArtificatId()
//            version getVersionName()
//            artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
//
//            //generate pom nodes for dependencies
//            pom.withXml {
//                def dependenciesNode = asNode().appendNode('dependencies')
//                configurations.implementation.allDependencies.each { dependency ->
//                    if (dependency.group != null) {
//                        def dependencyNode = dependenciesNode.appendNode('dependency')
//                        dependencyNode.appendNode('groupId', dependency.group)
//                        dependencyNode.appendNode('artifactId', dependency.name)
//                        dependencyNode.appendNode('version', dependency.version)
//                    }
//                }
//            }
//        }
//    }
//
//    repositories {
//        maven {
//            name = "GitHubPackages"
//            /** Configure path of your package repository on Github
//             *  Replace GITHUB_USERID with your/organisation Github userID and REPOSITORY with the repository name on GitHub
//             */
//            url = uri("https://maven.pkg.github.com/mycujoo/mls-android")
//
//            credentials {
//                /**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
//                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
//                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
//            }
//        }
//    }
//}
